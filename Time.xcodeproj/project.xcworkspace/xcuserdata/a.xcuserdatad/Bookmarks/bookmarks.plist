<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>29</string>
					<key>StartingColumnNumber</key>
					<string>53</string>
					<key>StartingLineNumber</key>
					<string>28</string>
					<key>Timestamp</key>
					<string>743962475.1914901</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>home-directory</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Library/Developer/Xcode/DerivedData/Time-dtqlxrggkpgepfaabrbzaslsijkf/SourcePackages/checkouts/swift-literal-type-inference/Sources/LiteralTypeInference/Internal/ArrayExprSyntax+inference.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>
</string>
				<key>leading</key>
				<string>}

extension Sequence where Element == ArrayExprSyntax {</string>
				<key>trailing</key>
				<string>    var inferredElementType: TypeSyntax? {
        let expressions = self.flatMap { $0.elements.map(\.expression) }
        guard let type = expressions.inferredElementType else { return nil }
</string>
			</dict>
			<key>title</key>
			<string>the extension is special</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>179</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>178</string>
					<key>Timestamp</key>
					<string>744453615.256179</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Time/TimeView/TagSelector.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>struct CompactTagView: View {
</string>
				<key>leading</key>
				<string>}

</string>
				<key>trailing</key>
				<string>    var tag: Tag
    var body: some View {
        Text(tag.name)
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
